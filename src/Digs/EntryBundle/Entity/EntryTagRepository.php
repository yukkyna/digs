<?php

namespace Digs\EntryBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * EntryTagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EntryTagRepository extends EntityRepository
{
	public function findOpenedEntryTagByMember($memberId)
	{
		return $this->createQueryBuilder('t')
			->select('t.id, t.name, COUNT(t.id) AS cnt')
			->leftJoin('t.entries', 'e')
            ->where('e.status = 1')
			->andWhere('e.member=:member')
			->setParameter('member', $memberId)
			->groupBy('t.id, t.name')
            ->getQuery()
			->getResult()
            ;
	}

	public function findOneByNameOrderASC($name)
	{
		$result = $this
            ->createQueryBuilder('e')
            ->where('e.name = :name')
			->orderBy('e.id', 'ASC')
            ->setParameter('name', $name)
            ->setMaxResults(1)
            ->getQuery()
			->getResult()
            ;
		if (count($result) > 0)
		{
			return $result[0];
		}
		return null;
	}
    
    /**
     * $wordを含むタグを取得する
     * @param type $word
     */
    public function findAllContainWord($word) {
        // TODO 他に方法は?
        $word = mb_ereg_replace('\\\\','\\\\',$word);
        $word = mb_ereg_replace('%','\%',$word);
        $word = mb_ereg_replace('_','\_',$word);

        $qb = $this
            ->createQueryBuilder('e')
			->orderBy('e.name', 'ASC');
        return $qb->where($qb->expr()->like("e.name", ":name"))
            ->setParameter("name", "%".$word."%")
            ->getQuery()
			->getResult();
    }
}
